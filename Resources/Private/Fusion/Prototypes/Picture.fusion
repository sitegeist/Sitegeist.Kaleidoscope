prototype(Sitegeist.Kaleidoscope:Picture) < prototype(Neos.Fusion:Component) {

    @styleguide {
        props {
            imageSource = Sitegeist.Kaleidoscope:DummyImageSource
            sources = Neos.Fusion:RawArray {
                1 = Neos.Fusion:RawArray {
                    srcset = '1x, 1.5x, 2x'
                    media = 'screen and (min-width: 1600px)'
                }
                2 = Neos.Fusion:RawArray {
                    imageSource = Sitegeist.Kaleidoscope:DummyImageSource {
                        text = "im am in webp format"
                        format = 'webp'
                    }
                    srcset = '320w, 480w, 800w, 1000w'
                    sizes = '(max-width: 320px) 280px, (max-width: 480px) 440px, 800px'
                    type = 'image/webp'
                    media = 'screen and (max-width: 1599px)'
                }
                3 = Neos.Fusion:RawArray {
                    imageSource = Sitegeist.Kaleidoscope:DummyImageSource {
                        text = "im am here for printing"
                    }
                    media = 'print'
                }
                4 = Neos.Fusion:RawArray {
                    srcset = '400w, 800w, 1600w'
                    media = 'screen and (min-width: 2600px)'
                    width = 800
                    height = 300
                }
            }
            alt = 'Elva dressed as a fairy'
        }

        propSets {
          withAttributes {
            attributes = Neos.Fusion:DataStructure {
              data-foo="bar"
              style="border: 5px solid green;"
            }
            imgAttributes = Neos.Fusion:DataStructure {
              data-foo="baz"
              style="border: 5px solid pink;"
            }
          }
        }
    }

    imageSource = null
    srcset = null
    sizes = null
    loading = 'lazy'
    sources = null
    formats = null
    width = null
    height = null
    alt = ''
    title = null
    // class is deprecated in favor of attributes.class
    class = null
    attributes = Neos.Fusion:DataStructure
    imgAttributes = Neos.Fusion:DataStructure
    content = ''
    renderDimensionAttributes = true

    #
    # put the values that shall be applied to sources automatically to the context
    # to make them available to all props during evaluation
    #
    @context {
        __imageSource = ${this.imageSource}
        __srcset = ${this.srcset}
        __sizes = ${this.sizes}
        __width = ${this.width}
        __height = ${this.height}
        __format = ${this.format}
    }

    renderer = Neos.Fusion:Component {
        @if.hasImageSource = ${props.imageSource && Type.instance(props.imageSource, '\\Sitegeist\\Kaleidoscope\\Domain\\ImageSourceInterface')}

        # apply format, width and height to the imageSource
        imageSource = ${props.imageSource}
        imageSource.@process.applyWidth = ${props.width ? value.setWidth(props.width) : value}
        imageSource.@process.applyHeight = ${props.height ? value.setHeight(props.height) : value}
        imageSource.@process.applyFormat = ${props.format ? value.setFormat(props.format) : value}

        srcset = ${props.srcset}
        sizes = ${props.sizes}
        loading = ${props.loading}
        sources = ${props.sources}
        formats = ${props.formats}
        alt = ${props.alt}
        title = ${props.title}
        class = ${props.class}
        attributes = ${props.attributes}
        imgAttributes = ${props.imgAttributes}
        content = ${props.content}
        renderDimensionAttributes = ${props.renderDimensionAttributes}

        renderer = afx`
            <picture class={props.class} {...props.attributes}>
                {props.content}
                <Neos.Fusion:Loop items={props.sources} itemName="source" @if.has={props.sources}>
                    <Sitegeist.Kaleidoscope:Source
                        imageSource={source.imageSource ? source.imageSource : props.imageSource}
                        type={source.type}
                        media={source.media}
                        format={source.format}
                        width={source.width}
                        height={source.height}
                        srcset={source.srcset ? source.srcset : props.srcset}
                        sizes={source.sizes ? source.sizes : props.sizes}
                        renderDimensionAttributes={props.renderDimensionAttributes}
                    />
                </Neos.Fusion:Loop>
                <Neos.Fusion:Loop
                    @if.has={props.imageSource && props.formats}
                    items={Type.isArray(props.formats) ? props.formats : String.split(props.formats, ',')}
                    itemName="format"
                >
                    <Sitegeist.Kaleidoscope:Source
                        imageSource={props.imageSource}
                        format={String.trim(format)}
                    />
                </Neos.Fusion:Loop>
                <Sitegeist.Kaleidoscope:Image
                    imageSource={props.imageSource}
                    sizes={props.sizes}
                    srcset={props.srcset}
                    loading={props.loading}
                    alt={props.alt}
                    title={props.title}
                    attributes={props.imgAttributes}
                    renderDimensionAttributes={props.renderDimensionAttributes}
                />
            </picture>
        `
    }
}
